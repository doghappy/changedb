name: build
on:
  push:
    branches:
      - master
      - debug_runner
    tags-ignore:
      - "*"
  pull_request:
    branches: 
      - master
jobs:
  run-windows:
    runs-on: windows-latest


    steps:
    - name: Start SqlServer LocalDB on Windows
      run: SqlLocalDB start MSSQLLocalDB      
    - name: Start PostgreSQL on Windows
      run: Set-Service -InputObject postgresql-x64-14 -Status running -StartupType automatic
    - name: 01 Checkout Code
      uses: actions/checkout@v1
    - name: 02 Setup .Net Core 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: 03 Setup .NET Core 6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100
    - name: 04 Build with dotnet
      run: dotnet build
    - name: 05 Run Unit test
      run: dotnet test -s test/github.runsettings /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Exclude="[*Test]*"
    - name: 06 UpLoad SqlCe Coverage
      uses: actions/upload-artifact@v2
      with:
        name: sqlce-coverage
        path: test/ChangeDB.Agent.SqlCe.UnitTest/coverage.cobertura.xml
  run-linux:
    needs: run-windows
    runs-on: ubuntu-latest
    steps:
    - name: 01 Checkout Code
      uses: actions/checkout@v1
    - name: 02 Setup .Net Core 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: 03 Setup .NET Core 6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100
    - name: 04 Restore Dotnet Tool
      run: dotnet tool restore
    - name: 05 Check Code Format
      run: dotnet format --verify-no-changes 
    - name: 06 Build with dotnet
      run: dotnet build
    - name: 07 DownLoad Sqlce Coverage
      uses: actions/download-artifact@v2
      with:
        name: sqlce-coverage
        path: test/ChangeDB.Agent.SqlCe.UnitTest
    - name: 08 Run Unit test
      run: dotnet test --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Exclude="[*Test]*"
    - name: 09 Combin All Test Report
      run: dotnet reportgenerator -reports:test/*/coverage.cobertura.xml -reporttype:cobertura -targetdir:.
    - name: 10 Save Artifact
      uses: actions/upload-artifact@v1
      with:
        name: cobertura_report
        path: ./Cobertura.xml
    - name: 11 Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: unittests
        fail_ci_if_error: true
